<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>EDA on Oh Data Science</title>
    <link>http://example.org/tags/eda/</link>
    <description>Recent content in EDA on Oh Data Science</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 17 Jun 2020 00:00:00 +0000</lastBuildDate><atom:link href="http://example.org/tags/eda/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Preprocessing &amp; EDA</title>
      <link>http://example.org/%EC%9D%8C%EC%9B%90%EC%B0%A8%ED%8A%B8-%EC%98%88%EC%B8%A1/</link>
      <pubDate>Wed, 17 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/%EC%9D%8C%EC%9B%90%EC%B0%A8%ED%8A%B8-%EC%98%88%EC%B8%A1/</guid>
      <description>Preprocessing &amp;amp; EDA 파생변수 생성 title_song 생성  Idea : 높은 인기로 인해 음원차트에 2곡 이상의 곡을 진입시킨 가수들이 있다. 타이틀곡이 아닌 곡의 경우에는 가수의 다른 지표가 좋아도 타이틀곡에 비해 순위가 낮을 수 밖에 없다. 따라서 그 주차에 한 가수가 진입시킨 곡들 중에 가장 순위가 높은 곡을 title_song이라고 정하고 title_song인 경우는 TRUE, 아닌 경우는 FALSE를 할당하는 변수를 만들었다.
 Example :
    artist name week rank_g    청하 벌써 12시 2019-01-02 1  청하 나의 의미 2019-01-02 5  청하 Roller Coster 2019-01-02 6     한 주차에 같은 가수의 곡이 세 개 있다.</description>
    </item>
    
  </channel>
</rss>
